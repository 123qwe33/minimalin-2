{"version":3,"sources":["minimalin-conf/tests/app.jshint.js","minimalin-conf/tests/controllers/index.jshint.js","minimalin-conf/tests/helpers/destroy-app.js","minimalin-conf/tests/helpers/destroy-app.jshint.js","minimalin-conf/tests/helpers/module-for-acceptance.js","minimalin-conf/tests/helpers/module-for-acceptance.jshint.js","minimalin-conf/tests/helpers/resolver.js","minimalin-conf/tests/helpers/resolver.jshint.js","minimalin-conf/tests/helpers/start-app.js","minimalin-conf/tests/helpers/start-app.jshint.js","minimalin-conf/tests/resolver.jshint.js","minimalin-conf/tests/router.jshint.js","minimalin-conf/tests/routes/index.jshint.js","minimalin-conf/tests/test-helper.js","minimalin-conf/tests/test-helper.jshint.js","minimalin-conf/tests/unit/routes/index-test.js","minimalin-conf/tests/unit/routes/index-test.jshint.js","vendor/ember-cli/tests-suffix.js"],"names":["define","exports","QUnit","module","test","assert","expect","ok","_ember","destroyApp","application","run","_qunit","_minimalinConfTestsHelpersStartApp","_minimalinConfTestsHelpersDestroyApp","name","options","arguments","length","undefined","beforeEach","this","apply","afterEach","_minimalinConfResolver","_minimalinConfConfigEnvironment","resolver","create","namespace","modulePrefix","podModulePrefix","_minimalinConfApp","startApp","attrs","attributes","merge","APP","setupForTesting","injectTestHelpers","_minimalinConfTestsHelpersResolver","_emberQunit","setResolver","moduleFor","route","subject","require","EmberENV","TESTS_FILE_LOADED"],"mappings":"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CAA,EAAAC,OAAA,GACAD,EAAAE,IAAA,EAAA,qDCJAsC,QAAA,oCACAC,SAAAC,mBAAA;AjBFA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;;ACLA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACTA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AChBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;;ACFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACVA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;ACPA;AACA;AACA;AACA;AACA;AACA","file":"tests.js","sourcesContent":["define('minimalin-conf/tests/app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'app.js should pass jshint.\\napp.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 3, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 4, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\napp.js: line 6, col 1, \\'let\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 13, col 3, \\'object short notation\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\napp.js: line 18, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n7 errors');\n  });\n});","define('minimalin-conf/tests/controllers/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - controllers/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'controllers/index.js should pass jshint.\\ncontrollers/index.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/index.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/index.js: line 4, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\ncontrollers/index.js: line 6, col 5, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\n\\n4 errors');\n  });\n});","define('minimalin-conf/tests/helpers/destroy-app', ['exports', 'ember'], function (exports, _ember) {\n  exports['default'] = destroyApp;\n\n  function destroyApp(application) {\n    _ember['default'].run(application, 'destroy');\n  }\n});","define('minimalin-conf/tests/helpers/destroy-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/destroy-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/destroy-app.js should pass jshint.');\n  });\n});","define('minimalin-conf/tests/helpers/module-for-acceptance', ['exports', 'qunit', 'minimalin-conf/tests/helpers/start-app', 'minimalin-conf/tests/helpers/destroy-app'], function (exports, _qunit, _minimalinConfTestsHelpersStartApp, _minimalinConfTestsHelpersDestroyApp) {\n  exports['default'] = function (name) {\n    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n    (0, _qunit.module)(name, {\n      beforeEach: function beforeEach() {\n        this.application = (0, _minimalinConfTestsHelpersStartApp['default'])();\n\n        if (options.beforeEach) {\n          options.beforeEach.apply(this, arguments);\n        }\n      },\n\n      afterEach: function afterEach() {\n        if (options.afterEach) {\n          options.afterEach.apply(this, arguments);\n        }\n\n        (0, _minimalinConfTestsHelpersDestroyApp['default'])(this.application);\n      }\n    });\n  };\n});","define('minimalin-conf/tests/helpers/module-for-acceptance.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/module-for-acceptance.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/module-for-acceptance.js should pass jshint.');\n  });\n});","define('minimalin-conf/tests/helpers/resolver', ['exports', 'minimalin-conf/resolver', 'minimalin-conf/config/environment'], function (exports, _minimalinConfResolver, _minimalinConfConfigEnvironment) {\n\n  var resolver = _minimalinConfResolver['default'].create();\n\n  resolver.namespace = {\n    modulePrefix: _minimalinConfConfigEnvironment['default'].modulePrefix,\n    podModulePrefix: _minimalinConfConfigEnvironment['default'].podModulePrefix\n  };\n\n  exports['default'] = resolver;\n});","define('minimalin-conf/tests/helpers/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/resolver.js should pass jshint.');\n  });\n});","define('minimalin-conf/tests/helpers/start-app', ['exports', 'ember', 'minimalin-conf/app', 'minimalin-conf/config/environment'], function (exports, _ember, _minimalinConfApp, _minimalinConfConfigEnvironment) {\n  exports['default'] = startApp;\n\n  function startApp(attrs) {\n    var application = undefined;\n\n    var attributes = _ember['default'].merge({}, _minimalinConfConfigEnvironment['default'].APP);\n    attributes = _ember['default'].merge(attributes, attrs); // use defaults, but you can override;\n\n    _ember['default'].run(function () {\n      application = _minimalinConfApp['default'].create(attributes);\n      application.setupForTesting();\n      application.injectTestHelpers();\n    });\n\n    return application;\n  }\n});","define('minimalin-conf/tests/helpers/start-app.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - helpers/start-app.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'helpers/start-app.js should pass jshint.');\n  });\n});","define('minimalin-conf/tests/resolver.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - resolver.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'resolver.js should pass jshint.\\nresolver.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nresolver.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('minimalin-conf/tests/router.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - router.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'router.js should pass jshint.\\nrouter.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 2, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nrouter.js: line 4, col 1, \\'const\\' is available in ES6 (use \\'esversion: 6\\') or Mozilla JS extensions (use moz).\\nrouter.js: line 10, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n4 errors');\n  });\n});","define('minimalin-conf/tests/routes/index.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - routes/index.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(false, 'routes/index.js should pass jshint.\\nroutes/index.js: line 1, col 1, \\'import\\' is only available in ES6 (use \\'esversion: 6\\').\\nroutes/index.js: line 3, col 1, \\'export\\' is only available in ES6 (use \\'esversion: 6\\').\\n\\n2 errors');\n  });\n});","define('minimalin-conf/tests/test-helper', ['exports', 'minimalin-conf/tests/helpers/resolver', 'ember-qunit'], function (exports, _minimalinConfTestsHelpersResolver, _emberQunit) {\n\n  (0, _emberQunit.setResolver)(_minimalinConfTestsHelpersResolver['default']);\n});","define('minimalin-conf/tests/test-helper.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - test-helper.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'test-helper.js should pass jshint.');\n  });\n});","define('minimalin-conf/tests/unit/routes/index-test', ['exports', 'ember-qunit'], function (exports, _emberQunit) {\n\n  (0, _emberQunit.moduleFor)('route:index', 'Unit | Route | index', {\n    // Specify the other units that are required for this test.\n    // needs: ['controller:foo']\n  });\n\n  (0, _emberQunit.test)('it exists', function (assert) {\n    var route = this.subject();\n    assert.ok(route);\n  });\n});","define('minimalin-conf/tests/unit/routes/index-test.jshint', ['exports'], function (exports) {\n  'use strict';\n\n  QUnit.module('JSHint - unit/routes/index-test.js');\n  QUnit.test('should pass jshint', function (assert) {\n    assert.expect(1);\n    assert.ok(true, 'unit/routes/index-test.js should pass jshint.');\n  });\n});","/* jshint ignore:start */\n\nrequire('minimalin-conf/tests/test-helper');\nEmberENV.TESTS_FILE_LOADED = true;\n\n/* jshint ignore:end */\n"]}