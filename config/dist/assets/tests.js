define("minimalin-conf/tests/app.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - app.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!1,"app.js should pass jshint.\napp.js: line 1, col 1, 'import' is only available in ES6 (use 'esversion: 6').\napp.js: line 2, col 1, 'import' is only available in ES6 (use 'esversion: 6').\napp.js: line 3, col 1, 'import' is only available in ES6 (use 'esversion: 6').\napp.js: line 4, col 1, 'import' is only available in ES6 (use 'esversion: 6').\napp.js: line 6, col 1, 'let' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).\napp.js: line 13, col 3, 'object short notation' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).\napp.js: line 18, col 1, 'export' is only available in ES6 (use 'esversion: 6').\n\n7 errors")})}),define("minimalin-conf/tests/controllers/index.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - controllers/index.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!1,"controllers/index.js should pass jshint.\ncontrollers/index.js: line 1, col 1, 'import' is only available in ES6 (use 'esversion: 6').\ncontrollers/index.js: line 2, col 1, 'import' is only available in ES6 (use 'esversion: 6').\ncontrollers/index.js: line 4, col 1, 'export' is only available in ES6 (use 'esversion: 6').\ncontrollers/index.js: line 6, col 5, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).\n\n4 errors")})}),define("minimalin-conf/tests/helpers/destroy-app",["exports","ember"],function(e,s){function n(e){s["default"].run(e,"destroy")}e["default"]=n}),define("minimalin-conf/tests/helpers/destroy-app.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - helpers/destroy-app.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!0,"helpers/destroy-app.js should pass jshint.")})}),define("minimalin-conf/tests/helpers/module-for-acceptance",["exports","qunit","minimalin-conf/tests/helpers/start-app","minimalin-conf/tests/helpers/destroy-app"],function(e,s,n,i){e["default"]=function(e){var t=arguments.length<=1||void 0===arguments[1]?{}:arguments[1];(0,s.module)(e,{beforeEach:function(){this.application=(0,n["default"])(),t.beforeEach&&t.beforeEach.apply(this,arguments)},afterEach:function(){t.afterEach&&t.afterEach.apply(this,arguments),(0,i["default"])(this.application)}})}}),define("minimalin-conf/tests/helpers/module-for-acceptance.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - helpers/module-for-acceptance.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!0,"helpers/module-for-acceptance.js should pass jshint.")})}),define("minimalin-conf/tests/helpers/resolver",["exports","minimalin-conf/resolver","minimalin-conf/config/environment"],function(e,s,n){var i=s["default"].create();i.namespace={modulePrefix:n["default"].modulePrefix,podModulePrefix:n["default"].podModulePrefix},e["default"]=i}),define("minimalin-conf/tests/helpers/resolver.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - helpers/resolver.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!0,"helpers/resolver.js should pass jshint.")})}),define("minimalin-conf/tests/helpers/start-app",["exports","ember","minimalin-conf/app","minimalin-conf/config/environment"],function(e,s,n,i){function t(e){var t=void 0,o=s["default"].merge({},i["default"].APP);return o=s["default"].merge(o,e),s["default"].run(function(){t=n["default"].create(o),t.setupForTesting(),t.injectTestHelpers()}),t}e["default"]=t}),define("minimalin-conf/tests/helpers/start-app.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - helpers/start-app.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!0,"helpers/start-app.js should pass jshint.")})}),define("minimalin-conf/tests/resolver.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - resolver.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!1,"resolver.js should pass jshint.\nresolver.js: line 1, col 1, 'import' is only available in ES6 (use 'esversion: 6').\nresolver.js: line 3, col 1, 'export' is only available in ES6 (use 'esversion: 6').\n\n2 errors")})}),define("minimalin-conf/tests/router.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - router.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!1,"router.js should pass jshint.\nrouter.js: line 1, col 1, 'import' is only available in ES6 (use 'esversion: 6').\nrouter.js: line 2, col 1, 'import' is only available in ES6 (use 'esversion: 6').\nrouter.js: line 4, col 1, 'const' is available in ES6 (use 'esversion: 6') or Mozilla JS extensions (use moz).\nrouter.js: line 10, col 1, 'export' is only available in ES6 (use 'esversion: 6').\n\n4 errors")})}),define("minimalin-conf/tests/routes/index.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - routes/index.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!1,"routes/index.js should pass jshint.\nroutes/index.js: line 1, col 1, 'import' is only available in ES6 (use 'esversion: 6').\nroutes/index.js: line 3, col 1, 'export' is only available in ES6 (use 'esversion: 6').\n\n2 errors")})}),define("minimalin-conf/tests/test-helper",["exports","minimalin-conf/tests/helpers/resolver","ember-qunit"],function(e,s,n){(0,n.setResolver)(s["default"])}),define("minimalin-conf/tests/test-helper.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - test-helper.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!0,"test-helper.js should pass jshint.")})}),define("minimalin-conf/tests/unit/routes/index-test",["exports","ember-qunit"],function(e,s){(0,s.moduleFor)("route:index","Unit | Route | index",{}),(0,s.test)("it exists",function(e){var s=this.subject();e.ok(s)})}),define("minimalin-conf/tests/unit/routes/index-test.jshint",["exports"],function(e){"use strict";QUnit.module("JSHint - unit/routes/index-test.js"),QUnit.test("should pass jshint",function(e){e.expect(1),e.ok(!0,"unit/routes/index-test.js should pass jshint.")})}),require("minimalin-conf/tests/test-helper"),EmberENV.TESTS_FILE_LOADED=!0;
//# sourceMappingURL=tests.map